# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: IN_PLAYWRIGHT_SERVICE_URL
    type: string
    default: 'https://playwright.azure.com'
  - name: IN_MAX_ITERATIONS
    type: number
    default: 10

variables:
  "system.debug": false

steps:

- task: NodeTool@0
  inputs:
    versionSource: 'spec'
    versionSpec: '>16.x'


- task: PowerShell@2
  enabled: true
  displayName: "Install dependencies"
  inputs:
    targetType: 'inline'
    script: 'npm ci'
    workingDirectory: '$(System.DefaultWorkingDirectory)/samples/get-started'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'PlaywrightServiceConnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Authenticated using service connection"
      export PLAYWRIGHT_SERVICE_ACCESS_TOKEN=$(az account get-access-token --resource https://playwright.azure.com --query accessToken --output tsv)

- script: |
    echo "PLAYWRIGHT_SERVICE_URL: $PLAYWRIGHT_SERVICE_URL"
    echo "TEST_ITERATIONS: $TEST_ITERATIONS"
    npx playwright test -c playwright.service.config.ts --workers=20
  workingDirectory: '$(System.DefaultWorkingDirectory)/samples/get-started'
  displayName: "Run Playwright tests"
  env:
    PLAYWRIGHT_SERVICE_ACCESS_TOKEN: $(TOKEN)
    PLAYWRIGHT_SERVICE_URL: ${{ parameters.IN_PLAYWRIGHT_SERVICE_URL }}
    TEST_ITERATIONS: ${{ parameters.IN_MAX_ITERATIONS }}
    
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(System.DefaultWorkingDirectory)/samples/get-started/test-results/junit-report.xml'
  condition: always()